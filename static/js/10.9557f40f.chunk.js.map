{"version":3,"sources":["components/Gallery/Gallery.jsx","redux/Gallery/gallery-select.ts","components/Gallery/galleryContainer.jsx"],"names":["Gallery","props","NewsWrapper","status","ImgWrapper","Preloader","src","imgInfo","url","alt","imgNews","error","style","color","Button","onClick","getImg","GalleryContainer","styled","main","article","div","button","isFirstRenderSelect","state","galleryPage","firstRender","getImgInfo","createSelector","imgData","images","downsized_large","getStatusSelect","getStatusError","connect","isRender","isFirstRender","useEffect"],"mappings":"uJA+BeA,EA3BC,SAACC,GAeb,OACI,kBAAC,EAAD,KACI,kBAACC,EAAD,KACI,0EAhBI,WACZ,OAAQD,EAAME,QACV,IAAK,UACD,OAAO,kBAACC,EAAD,KAAY,kBAACC,EAAA,EAAD,OAEvB,IAAK,WACD,OAAQ,kBAACD,EAAD,KACI,yBAAKE,IAAKL,EAAMM,QAAQC,IAAKC,IAAI,OAGjD,QAAS,OAAO,6BAAK,kBAACJ,EAAA,EAAD,QAOhBK,GACAT,EAAMU,OAAS,uBAAGC,MAAO,CAACC,MAAO,QAAlB,uJAAwDZ,EAAMU,QAC9E,kBAACG,EAAD,CAAQC,QAASd,EAAMe,QAAvB,6DAQVC,EAAmBC,IAAOC,KAAV,gFAAGD,CAAH,8FAKhBhB,EAAcgB,IAAOE,QAAV,2EAAGF,CAAH,6CAOXd,EAAac,IAAOG,IAAV,0EAAGH,CAAH,4EAUVJ,EAASI,IAAOI,OAAV,sEAAGJ,CAAH,0O,wBCnDCK,EAAsB,SAACC,GAChC,OAAOA,EAAMC,YAAYC,aAIhBC,EAAaC,YAAe,CADf,SAACJ,GAAD,OAAyBA,EAAMC,YAAYI,WACf,SAACL,GACnD,GAAIA,EACA,MAAO,CACHhB,IAAKgB,EAAMM,OAAOC,gBAAgBvB,QAKjCwB,EAAkB,SAACR,GAAD,OAAyBA,EAAMC,YAAYtB,QAC7D8B,EAAiB,SAACT,GAAD,OAAyBA,EAAMC,YAAYd,OCW1DuB,uBAPS,SAACV,GAAD,MAAY,CAChCjB,QAASoB,EAAWH,GACpBW,SAAUZ,EAAoBC,GAC9BrB,OAAQ6B,EAAgBR,GACxBb,MAAOsB,EAAeT,MAGe,CAACR,WAAOoB,mBAAlCF,EArBU,SAACjC,GAStB,OAPAoC,qBAAU,WACFpC,EAAMkC,WACNlC,EAAMe,SACNf,EAAMmC,eAAc,OAKxB,kBAAC,EAAD,iBAAanC,EAAb,CAAoBe,OAAQf,EAAMe","file":"static/js/10.9557f40f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst Gallery = (props) => {\r\n\r\n    const imgNews = () => {\r\n        switch (props.status) {\r\n            case 'loading': {\r\n                return <ImgWrapper><Preloader/></ImgWrapper>\r\n            }\r\n            case 'complete': {\r\n                return  <ImgWrapper>\r\n                            <img src={props.imgInfo.url} alt=\"#\"/>\r\n                        </ImgWrapper>\r\n            }\r\n            default: return <div><Preloader/></div>\r\n        }\r\n    }\r\n    return (\r\n        <GalleryContainer>\r\n            <NewsWrapper>\r\n                <h2>Новости</h2>\r\n                {imgNews()}\r\n                {props.error && <p style={{color: 'red'}}>{`Извините произошла ошибка ${props.error}`}</p>}\r\n                <Button onClick={props.getImg}>Загрузить</Button>\r\n            </NewsWrapper>\r\n        </GalleryContainer>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n\r\nconst GalleryContainer = styled.main`\r\n  background-color: white;\r\n  box-shadow: 0 1px 0 0 #d3d9de,0 0 0 1px #e7e8ec;\r\n  border-radius: 4px;\r\n`\r\nconst NewsWrapper = styled.article`\r\n  text-align: center;\r\n  h2 {\r\n    padding-top: 20px;\r\n  }\r\n`\r\n\r\nconst ImgWrapper = styled.div`\r\n    margin: 20px auto;\r\n    width: 640px;\r\n    height: 320px;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n`\r\n\r\nconst Button = styled.button`\r\n    padding: 7px 16px 8px;\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    background-color: #5181b8;\r\n    border: 0;\r\n    border-radius: 4px;\r\n    color: #fff;\r\n    &:hover {\r\n    opacity: 0.88;\r\n    }\r\n    &:active {\r\n    background-color: #4a76a8;\r\n    padding-top: 8px;\r\n    padding-bottom: 7px;\r\n    } \r\n`\r\n\r\n","import {AppStateType} from \"../redux-store\";\r\nimport { createSelector } from 'reselect'\r\nimport {createDate} from \"../../components/common/Data/createDate\";\r\n\r\nexport const isFirstRenderSelect = (state: AppStateType) => {\r\n    return state.galleryPage.firstRender\r\n}\r\n\r\nexport const getImgData = (state: AppStateType) => state.galleryPage.imgData\r\nexport const getImgInfo = createSelector([getImgData],(state: any) => {\r\n    if (state){\r\n        return {\r\n            url: state.images.downsized_large.url,\r\n        }\r\n    }\r\n\r\n})\r\nexport const getStatusSelect = (state: AppStateType) => state.galleryPage.status\r\nexport const getStatusError = (state: AppStateType) => state.galleryPage.error\r\n","import React, {useEffect} from 'react';\r\nimport Gallery from \"./Gallery\";\r\nimport {connect} from \"react-redux\";\r\nimport {getImg, isFirstRender} from \"../../redux/Gallery/gallery-action\";\r\nimport {getImgInfo, getStatusError, getStatusSelect, isFirstRenderSelect} from \"../../redux/Gallery/gallery-select\";\r\n\r\n\r\n\r\nconst GalleryContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        if (props.isRender){\r\n            props.getImg()\r\n            props.isFirstRender(false)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Gallery {...props} getImg={props.getImg}/>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    imgInfo: getImgInfo(state),\r\n    isRender: isFirstRenderSelect(state),\r\n    status: getStatusSelect(state),\r\n    error: getStatusError(state),\r\n})\r\n\r\nexport default connect (mapStateToProps, {getImg,isFirstRender}) (GalleryContainer);\r\n"],"sourceRoot":""}