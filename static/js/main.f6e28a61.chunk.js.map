{"version":3,"sources":["redux/Users/users-reducer.ts","redux/dialogs-reducer.ts","components/common/Data/createDate.js","assets/images/Preloader.svg","redux/Users/users-action.ts","redux/Profile/profile-reducer.ts","redux/Gallery/gallery-reducer.ts","components/SVG-Components/ProfileSvg.tsx","components/SVG-Components/MessageSvg.tsx","components/SVG-Components/NewsSvg.tsx","components/SVG-Components/HistorySvg.tsx","components/SVG-Components/UsersSvg.tsx","redux/Auth/auth-select.ts","components/Navbar/Navbar.tsx","redux/Auth/auth-reducer.ts","redux/Auth/auth-actions.ts","components/Login/Login2.tsx","api/api-js.js","redux/Users/user-saga.ts","redux/Auth/auth-saga.ts","redux/app-reducer.ts","assets/images/arrowSvg.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","App.js","serviceWorker.js","redux/Profile/profile-saga.ts","redux/Gallery/gallery-saga.ts","redux/Sagas/root-saga.ts","redux/redux-store.ts","index.js","redux/Profile/profile-actions.ts","redux/Gallery/gallery-action.ts","components/Preloader/Preloader.jsx"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","GET_USERS","GET_CURRENT_PAGE_USERS","GET_USERS_SUBS","SET_USERS_SUB","GET_USERS_COUNT","IS_FRIENDS","SET_FRIENDS_COUNT","SET_ALL_USERS_COUNT","GET_RANDOM_FRIENDS","SET_RANDOM_FRIENDS","SET_PORTION_NUMBER","initialState","users","randomFriends","isUserSubs","friendsCount","pageSize","totalUsersCount","allUsersCount","paginationSize","portionNumber","currentPage","isFriends","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","subs","currentTotalCount","filter","boolean","count","number","dialogs","name","messages","message","newMessageText","addMessageActionCreator","newMessageBody","dialogsReducer","createDate","newData","Date","getHours","getMinutes","getSeconds","module","exports","follow","unFollow","setUsers","setCurrent","setTotalCount","toggleIsFetching","toggleFollowingProgress","getUsers","whatUsers","getCurrentPageUsers","pageNumber","getUsersSubs","setUsersSubs","setFriendsCount","setAllUsersCount","getRandomFriends","setRandomFriends","setPortionNumber","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_PHOTO_SUCCESS","GET_PROFILE","GET_USER_STATUS","UPDATE_USER_STATUS","SAVE_PHOTO","SAVE_PROFILE","SAVE_PROFILE_SUCCESS","posts","profile","status","isSaveProfile","postId","profileReducer","payload","newPost","date","lw","findIndex","w","slice","photos","photo","SET_IMAGES","DELETE_HISTORY_ITEM","GET_IMG","FIRST_RENDER","SET_STATUS","SET_STATUS_ERROR","imgData","galleryHistory","error","firstRender","galleryReducer","data","url","image_url","time","imgName","username","length","value","flag","ProfileSvg","height","width","fill","viewBox","aria-labelledby","d","MessageSvg","NewsSvg","HistorySvg","UsersSvg","isAuthSelect","auth","isAuth","messagesErrorSelect","captchaSelect","captcha","Navbar","props","useSelector","console","log","NavWrapper","ListWrapper","NavLinkStyled","to","HomePageSvg","styled","nav","ul","div","NavLink","authReducer","createReducer","login","email","setErrorMessages","Login","useState","validationSchema","yup","shape","max","password","FormWrapper","errorMessage","ErrorWrapper","List","FormContainer","initialValues","onSubmit","values","checkbox","loginAuth","handleChange","FormsItem","Label","Input","placeholder","autoComplete","onChange","Error","component","style","color","CaptchaWrapper","src","alt","ButtonWrapper","Button","connect","rememberMe","section","label","Field","ErrorMessage","button","instance","axios","withCredentials","baseURL","headers","usersAPI","get","then","response","catch","post","delete","put","formData","FormData","append","authApi","galleryApi","getUsersWatcher","getUsersWorker","getCurrentPageUsersWatcher","getCurrentPageUsersWorker","getAllUsersCount","getAllFriendsCount","followWatcher","followWorker","unFollowWatcher","unFollowWorker","getRandomFriendsWatcher","getRandomFriendsWorker","getUsersSubsWorker","rootSaga","throttle","actions","call","items","totalCount","takeEvery","resultCode","arr","randomNumber","randomIndex","Math","floor","random","some","j","push","fork","authWatcher","getAuthWorker","getProfilePhoto","setLoginWorker","captchaWorker","logoutWorker","small","initializeWatcher","initializeWorker","initialized","appReducer","ArrowSvg","Header","loginOut","photoSmall","isOpenModal","setOpenModal","ref","useRef","loginBlockRef","handleClickOutside","event","current","contains","target","document","removeEventListener","HeaderWrapper","Container","Logo","LoginWrapper","onClick","addEventListener","LoginTrue","LoginName","LoginPhotoSmall","ArrowSvgWrapper","LoginFalse","CSSTransition","in","classNames","timeout","mountOnEnter","unmountOnExit","DropDownWrapper","DropDownItem","href","header","img","span","translateYtrue","keyframes","rotate","li","HeaderContainer","profilePhotos","DialogsContainer","React","lazy","UsersContainer","ProfileContainer","GalleryContainer","GalleryHistory","ProfileEditContainer","App","this","initialize","className","navbarState","fallback","path","render","Preloader","Component","appPage","Boolean","window","location","hostname","match","getProfileWatcher","getProfileWorker","getUserStatusWatcher","getUserStatusWorker","updateUserStatusWatcher","updateUserStatusWorker","savePhotoWatcher","savePhotoWorker","saveProfileWatcher","saveProfileWorker","saveProfileSuccess","delay","getImgWatcher","getImgWorker","spawn","gallery","reducers","combineReducers","profilePage","dialogsPage","usersPage","form","formReducer","galleryPage","sagaMiddleware","CreateSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","ReactDOM","basename","process","getState","getElementById","navigator","serviceWorker","ready","registration","unregister","addPost","deletePost","setUserProfile","setUserStatus","savePhotoSuccess","getProfile","getUserStatus","updateUserStatus","savePhoto","saveProfile","getImg","isFirstRender","setGalleryStatus","setGalleryStatusError","setImages","deleteHistoryItem","setCurrentPages","Preloaders"],"mappings":"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","file":"static/js/main.f6e28a61.chunk.js","sourcesContent":["import {UserType} from \"../../Types/Types\";\r\nimport * as actions from \"./users-action\";\r\n\r\n\r\n\r\nexport const FOLLOW = 'FOLLOW'\r\nexport const UNFOLLOW = 'UNFOLLOW'\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nexport const SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\nexport const GET_USERS = 'GET_USERS'\r\nexport const GET_CURRENT_PAGE_USERS = 'GET_CURRENT_PAGE'\r\nexport const GET_USERS_SUBS = 'GET_USERS_SUBS'\r\nexport const SET_USERS_SUB = 'SET_USERS_SUB'\r\nexport const GET_USERS_COUNT = 'GET_USERS_COUNT'\r\nexport const IS_FRIENDS = 'IS_FRIENDS'\r\nexport const SET_FRIENDS_COUNT = 'SET_FRIENDS_COUNT'\r\nexport const SET_ALL_USERS_COUNT = 'SET_ALL_USERS_COUNT'\r\nexport const GET_RANDOM_FRIENDS = 'GET_RANDOM_FRIENDS'\r\nexport const SET_RANDOM_FRIENDS = 'SET_RANDOM_FRIENDS'\r\nexport const SET_PORTION_NUMBER = 'SET_PORTION_NUMBER'\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    randomFriends: [] as Array<UserType>,\r\n    isUserSubs: null as boolean | null,\r\n    friendsCount: 0,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    allUsersCount: 0,\r\n    paginationSize: 10,\r\n    portionNumber: 1,\r\n    currentPage: 1 ,\r\n    isFriends: null as boolean | null,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state, users: state.users.map ((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state, users: state.users.map ((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n\r\n        case SET_USERS_SUB: {\r\n            return {\r\n                ...state, isUserSubs: action.subs\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n\r\n            return {...state, totalUsersCount: action.currentTotalCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        case IS_FRIENDS: {\r\n            return  {\r\n                ...state, isFriends: action.boolean\r\n            }\r\n        }\r\n\r\n        case SET_FRIENDS_COUNT: {\r\n            return {\r\n                ...state, friendsCount: action.count\r\n            }\r\n        }\r\n\r\n        case SET_ALL_USERS_COUNT: {\r\n            return {\r\n                ...state, allUsersCount: action.count\r\n            }\r\n        }\r\n\r\n        case SET_RANDOM_FRIENDS: {\r\n            return {\r\n                ...state, randomFriends: action.randomFriends\r\n            }\r\n        }\r\n\r\n        case SET_PORTION_NUMBER: {\r\n            return  {\r\n                ...state, portionNumber: action.number\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// Столкнулся с автоматической типизацией экшена функции createReducer, отложил на потом\r\n// const authReducer = createReducer(initialState, {\r\n//     [FOLLOW]: (state, action: ReturnType<typeof actions.follow>) => {\r\n//         return {\r\n//             ...state, users: state.users.map ((u) => {\r\n//                 if (u.id === action.userId) {\r\n//                     return {...u, followed: true}\r\n//                 }\r\n//                 return u\r\n//             })\r\n//         }\r\n//     }\r\n// })\r\n\r\n\r\ntype ActionType = ReturnType<InferValueType<typeof actions>>\r\n\r\ntype InferValueType<T> = T extends {[key: string]: infer U} ? U : never\r\n\r\n\r\n\r\n\r\n// type ThunkType = ThunkAction <Promise<void>, AppStateType, unknown, ActionType>\r\n\r\n// export const getUsers = (currentPage: number, pageSize: number): ThunkType  => async (dispatch) => {\r\n//     dispatch (actions.toggleIsFetching (true))\r\n//     let data = await usersAPI.getUsers (currentPage, pageSize)\r\n//\r\n//     dispatch (actions.toggleIsFetching (false))\r\n//     dispatch (actions.setUsers (data.items))\r\n//     dispatch (actions.setTotalCount (data.totalCount))\r\n//\r\n// }\r\n\r\n// export const getCurrentPageUsers = (pageNumber: number, pageSize: number): ThunkType  => async (dispatch) => {\r\n//     dispatch (actions.setCurrent (pageNumber));\r\n//     dispatch (actions.toggleIsFetching (true))\r\n//     let data = await usersAPI.getUsers (pageNumber, pageSize)\r\n//\r\n//     dispatch (actions.toggleIsFetching (false))\r\n//     dispatch (actions.setUsers (data.items))\r\n//\r\n// }\r\n\r\n// const followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, action: any) => {\r\n//     dispatch (actions.toggleFollowingProgress (true, userId))\r\n//     const data = await apiMethod(userId)\r\n//     if (data.resultCode === 0) {\r\n//         dispatch (action(userId))\r\n//     }\r\n//     dispatch (actions.toggleFollowingProgress (false, userId))\r\n// }\r\n//\r\n// export const followUser = (userId: number): ThunkType => async (dispatch) => {\r\n//      followUnfollowFlow(dispatch, userId, usersAPI.deleteUsersSubs, actions.unFollow )\r\n// }\r\n//\r\n// export const unFollowUser = (userId: number): ThunkType => async (dispatch) => {\r\n//       followUnfollowFlow(dispatch, userId, usersAPI.postUsersSubs, actions.follow)\r\n// }\r\n\r\nexport default usersReducer","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\n\r\ntype DialogType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\ntype MessagesType = {\r\n    id: string\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: '1', name: 'Andrew',},\r\n        {id: '2', name: 'Aik',},\r\n        {id: '3', name: 'Stasyan',},\r\n        {id: '4', name: 'Dimas',},\r\n        {id: '5', name: 'Musa',},\r\n        {id: '6', name: 'Colbasa',},\r\n    ] as Array<DialogType>,\r\n\r\n\r\n    messages: [\r\n        {id: '1', message: 'Hi',},\r\n        {id: '2', message: 'How are you?',},\r\n        {id: '3', message: 'Good luck',},\r\n        {id: '4', message: 'bye',},\r\n        {id: '5', message: 'i learn react',},\r\n        {id: '6', message: 'Sochnaya',},\r\n\r\n    ] as Array<MessagesType>,\r\n\r\n    newMessageText: 'ss'\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n const dialogsReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            return  {\r\n                ...state, messages: [...state.messages, {id: '1', message: action.newMessageBody,}]\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\ntype ActionType = ReturnType<typeof addMessageActionCreator>\r\n\r\nexport const addMessageActionCreator = (newMessageBody: string) => ({type: ADD_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer","export const createDate = () => {\r\n    const newData = new Date()\r\n    const hours = newData.getHours() < 10 ? '0' +  newData.getHours() : newData.getHours()\r\n    const minutes = newData.getMinutes() < 10 ? '0' +  newData.getMinutes() : newData.getMinutes()\r\n    const seconds = newData.getSeconds() < 10 ? '0' +  newData.getSeconds() : newData.getSeconds();\r\n\r\n\r\n    return  hours + ':' + minutes + ':' + seconds;\r\n\r\n\r\n\r\n};\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/Preloader.f685b5dd.svg\";","import {UserType} from \"../../Types/Types\";\r\nimport {\r\n    FOLLOW,\r\n    GET_CURRENT_PAGE_USERS,\r\n    GET_USERS,\r\n    SET_CURRENT_PAGE,\r\n    SET_TOTAL_COUNT,\r\n    SET_USERS,\r\n    TOGGLE_IS_FETCHING,\r\n    TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    UNFOLLOW,\r\n    GET_USERS_SUBS,\r\n    SET_USERS_SUB,\r\n    GET_USERS_COUNT,\r\n    IS_FRIENDS,\r\n    SET_FRIENDS_COUNT,\r\n    SET_ALL_USERS_COUNT,\r\n    GET_RANDOM_FRIENDS,\r\n    SET_RANDOM_FRIENDS, SET_PORTION_NUMBER,\r\n} from \"./users-reducer\";\r\n\r\n\r\nexport const follow = (userId: number) => ({type: FOLLOW,userId}as const)\r\nexport const unFollow = (userId: number) => ({type: UNFOLLOW, userId} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users}as const)\r\nexport const setCurrent = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage}as const)\r\nexport const setTotalCount = (currentTotalCount: number) => ({type: SET_TOTAL_COUNT, currentTotalCount}as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching}as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId}as const)\r\nexport const getUsers = (currentPage: number, pageSize: number,whatUsers: boolean | null) => ({type:GET_USERS,currentPage,pageSize,whatUsers}as const)\r\nexport const getCurrentPageUsers = (pageNumber: number, pageSize: number,whatUsers: boolean | null) => ({type: GET_CURRENT_PAGE_USERS,pageNumber,pageSize,whatUsers}as const)\r\nexport const getUsersSubs = (userId: number) => ({type: GET_USERS_SUBS,userId}as const)\r\nexport const setUsersSubs = (subs: boolean) => ({type: SET_USERS_SUB,subs}as const)\r\nexport const getUsersCount = (count: number) => ({type: GET_USERS_COUNT,count}as const)\r\nexport const isFriends = (boolean: boolean | null) => ({type: IS_FRIENDS, boolean}as const)\r\nexport const setFriendsCount = (count: number) => ({type: SET_FRIENDS_COUNT, count}as const)\r\nexport const setAllUsersCount = (count: number) => ({type: SET_ALL_USERS_COUNT, count}as const)\r\nexport const getRandomFriends = () => ({type: GET_RANDOM_FRIENDS}as const)\r\nexport const setRandomFriends = (randomFriends: Array<UserType>) => ({type: SET_RANDOM_FRIENDS, randomFriends}as const)\r\nexport const setPortionNumber = (number: number) => ({type: SET_PORTION_NUMBER, number}as const)\r\n","\r\nimport {usersAPI} from \"../../api/api-js\";\r\nimport {PhotosType, ProfileType} from \"../../Types/Types\";\r\nimport * as actions from './profile-actions'\r\n\r\nexport const ADD_POST = 'ADD-POST'\r\nexport const DELETE_POST = 'DELETE-POST'\r\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nexport const SET_USER_STATUS = 'SET_USER_STATUS'\r\nexport const SET_PHOTO_SUCCESS = 'SET_PHOTO_SUCCESS'\r\nexport const GET_PROFILE = 'GET_PROFILE'\r\nexport const GET_USER_STATUS = 'GET_USER_STATUS'\r\nexport const UPDATE_USER_STATUS = 'UPDATE_USER_STATUS'\r\nexport const SAVE_PHOTO = 'SAVE_PHOTO'\r\nexport const SAVE_PROFILE = 'SAVE_PROFILE'\r\nexport const SAVE_PROFILE_SUCCESS = 'SAVE_PROFILE_SUCCESS'\r\n\r\ntype Posts = {\r\n    id: number\r\n    payload: string | object\r\n    date: string\r\n}\r\nlet initialState = {\r\n    posts: [] as Array<Posts>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    isSaveProfile: false,\r\n    // photos: null as PhotosType | null\r\n}\r\n\r\nlet postId = 1\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state , posts: [{id: postId++, payload: action.newPost, date: action.date},...state.posts,]\r\n            }\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            const lw = state.posts.findIndex(w => w.id === action.id )\r\n            return  {\r\n                ...state, posts: [\r\n                    ...state.posts.slice(0,lw),\r\n                    ...state.posts.slice(lw + 1),\r\n                ]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state, status: action.status,\r\n            }\r\n        }\r\n        case SET_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photo} as ProfileType\r\n            }\r\n        }\r\n\r\n        case SAVE_PROFILE_SUCCESS: {\r\n            return {\r\n                ...state, isSaveProfile: !state.isSaveProfile\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\ntype ActionType = ReturnType<InferValueType<typeof actions>>\r\ntype InferValueType<T> = T extends {[key: string]: infer U} ? U : never\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const getProfile = (userId: number) => async (dispatch: any) => {\r\n//     const data = await usersAPI.getProfile(userId)\r\n//         dispatch(actions.setUserProfile(data.data))\r\n//\r\n// }\r\n\r\n// export const getUserStatus = (userId: number) => async (dispatch: any) => {\r\n//    const data =  await usersAPI.getStatus(userId)\r\n//         dispatch(actions.setUserStatus(data))\r\n// }\r\n\r\n// export const updateUserStatus = (status: string) => async (dispatch: any) => {\r\n//    const response = await usersAPI.updateStatus(status)\r\n//         if (response.data.resultCode === 0){\r\n//             dispatch(actions.setUserStatus(status))\r\n//         }\r\n//\r\n// }\r\n\r\n// export const savePhoto = (photo: PhotosType) => async (dispatch: any) => {\r\n//       let response = await usersAPI.savePhoto(photo)\r\n//         if (response.data.resultCode === 0){\r\n//             dispatch(actions.savePhotoSuccess(response.data.data.photos))\r\n//         }\r\n//\r\n// }\r\n\r\n// export const saveProfile = (profile: ProfileType) => async (dispatch: any) => {\r\n//     let response = await usersAPI.saveProfile(profile)\r\n//     if (response.data.resultCode === 0){\r\n//         // dispatch(savePhotoSuccess(response.data.data.photos))\r\n//     }\r\n//\r\n// }\r\n\r\nexport default profileReducer","import * as actions from \"./gallery-action\"\r\n\r\n\r\nexport const SET_IMAGES = 'gallery-reducer/SET_IMAGES'\r\nexport const DELETE_HISTORY_ITEM = 'gallery-reducer/DELETE_HISTORY_ITEM'\r\nexport const SET_CURRENT_PAGE = 'gallery-reducer/SET_CURRENT_PAGE'\r\nexport const GET_IMG = 'gallery-reducer/GET_IMG'\r\nexport const FIRST_RENDER = 'gallery-reducer/FIRST_RENDER'\r\nexport const SET_STATUS = 'gallery-reducer/SET_STATUS'\r\nexport const SET_STATUS_ERROR = 'gallery-reducer/SET_STATUS_ERROR'\r\n\r\n\r\nlet initialState = {\r\n    imgData: null,\r\n    galleryHistory: [] as Array<object>,\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    status: '',\r\n    error: null as null | string,\r\n    firstRender: true,\r\n}\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\n\r\nconst galleryReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_IMAGES: {\r\n            return {\r\n                ...state,\r\n                imgData: action.data,\r\n                galleryHistory: [...state.galleryHistory, {url: action.data.image_url, time: action.time, imgName: action.data.username, id: state.galleryHistory.length}]\r\n            }\r\n        }\r\n\r\n        case DELETE_HISTORY_ITEM: {\r\n            const lw = state.galleryHistory.findIndex ((w: any) => w.id === action.id)\r\n            return {\r\n                ...state,\r\n                galleryHistory: [\r\n                    ...state.galleryHistory.slice (0, lw),\r\n                    ...state.galleryHistory.slice (lw + 1),\r\n                ]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.value\r\n            }\r\n        }\r\n\r\n        case FIRST_RENDER: {\r\n            return {\r\n                ...state, firstRender: action.flag\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n\r\n        case SET_STATUS_ERROR: {\r\n            return {\r\n                ...state, error: action.status\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\ntype ActionType = ReturnType<InferValueType<typeof actions>>\r\ntype InferValueType<T> = T extends {[key: string]: infer U} ? U : never\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default galleryReducer","import React from 'react';\r\n\r\ntype PropsType = {\r\n    height: string\r\n    width: string\r\n    fill: string\r\n}\r\n\r\nconst ProfileSvg: React.FC<PropsType> = ({height, width, fill}) => {\r\n    return (\r\n        <svg width={width} height={height} fill={fill} viewBox=\"0 0 512 512\" aria-labelledby='profilesvg'>\r\n            <path d=\"M497.027,155.314l-230-152c-6.688-4.419-15.367-4.419-22.055,0l-230,152C9.37,159.016,6,165.284,6,172v320\r\n\t\t\tc0,11.046,8.954,20,20,20c5.833,0,444.336,0,460,0c11.046,0,20-8.954,20-20V172C506,165.284,502.63,159.016,497.027,155.314z\r\n\t\t\t M296,472h-80V352h80V472z M466,472H336V332c0-11.046-8.954-20-20-20H196c-11.046,0-20,8.954-20,20v140H46V182.755L256,43.973\r\n\t\t\tl210,138.782V472z\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default ProfileSvg;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    height: string\r\n    width: string\r\n    fill: string\r\n}\r\n\r\nconst MessageSvg: React.FC<PropsType> = ({height, width, fill}) => {\r\n    return (\r\n        <svg width={width} height={height} fill={fill} viewBox=\"0 0 511.096 511.096\" aria-labelledby='messagesvg'>\r\n            <path d=\"m74.414 480.548h-36.214l25.607-25.607c13.807-13.807 22.429-31.765 24.747-51.246-59.127-38.802-88.554-95.014-88.554-153.944 0-108.719 99.923-219.203 256.414-219.203 165.785 0 254.682 101.666 254.682 209.678 0 108.724-89.836 210.322-254.682 210.322-28.877 0-59.01-3.855-85.913-10.928-25.467 26.121-59.973 40.928-96.087 40.928z\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default MessageSvg;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    height: string\r\n    width: string\r\n    fill: string\r\n}\r\n\r\nconst NewsSvg: React.FC<PropsType> = ({height, width, fill}) => {\r\n    return (\r\n        <svg width={width} height={height} fill={fill} viewBox=\"0 0 512 512\" aria-labelledby='profilesvg'>\r\n            <path id=\"XMLID_1351_\" d=\"m502 0h-404c-5.522 0-10 4.477-10 10v44h-34c-5.522 0-10 4.478-10 10v54h-34c-5.523 0-10 4.478-10 10v330c0 29.775 24.225 54 54 54h404c29.775 0 54-24.225 54-54v-448c0-5.523-4.478-10-10-10zm-10 458c0 18.748-15.252 34-34 34h-362.088c7.55-9.29 12.088-21.123 12.088-34v-134.997c0-5.522-4.478-10-10-10s-10 4.478-10 10v134.997c0 18.748-15.252 34-34 34s-34-15.252-34-34v-320h24v310c0 5.522 4.478 10 10 10s10-4.478 10-10v-374h24v159.003c0 5.523 4.478 10 10 10s10-4.477 10-10v-213.003h384z\"/><path id=\"XMLID_1376_\" d=\"m146 158h308c5.522 0 10-4.477 10-10v-72c0-5.522-4.478-10-10-10h-308c-5.523 0-10 4.478-10 10v72c0 5.523 4.477 10 10 10zm10-72h288v52h-288z\"/><path id=\"XMLID_1459_\" d=\"m146 398h154c5.522 0 10-4.478 10-10v-192c0-5.523-4.478-10-10-10h-154c-5.523 0-10 4.477-10 10v192c0 5.522 4.477 10 10 10zm10-192h134v172h-134z\"/><path id=\"XMLID_1460_\" d=\"m454 186h-106c-5.522 0-10 4.477-10 10s4.478 10 10 10h106c5.522 0 10-4.477 10-10s-4.478-10-10-10z\"/><path id=\"XMLID_1476_\" d=\"m454 234h-106c-5.522 0-10 4.477-10 10s4.478 10 10 10h106c5.522 0 10-4.477 10-10s-4.478-10-10-10z\"/><path id=\"XMLID_1533_\" d=\"m454 282h-106c-5.522 0-10 4.478-10 10s4.478 10 10 10h106c5.522 0 10-4.478 10-10s-4.478-10-10-10z\"/><path id=\"XMLID_1535_\" d=\"m454 330h-106c-5.522 0-10 4.478-10 10s4.478 10 10 10h106c5.522 0 10-4.478 10-10s-4.478-10-10-10z\"/><path id=\"XMLID_1545_\" d=\"m454 378h-106c-5.522 0-10 4.478-10 10s4.478 10 10 10h106c5.522 0 10-4.478 10-10s-4.478-10-10-10z\"/><path id=\"XMLID_1550_\" d=\"m146 446h308c5.522 0 10-4.478 10-10s-4.478-10-10-10h-308c-5.523 0-10 4.478-10 10s4.477 10 10 10z\"/><path id=\"XMLID_1572_\" d=\"m98.5 268c-2.63 0-5.21 1.069-7.07 2.93-1.86 1.86-2.93 4.44-2.93 7.07 0 2.64 1.069 5.21 2.93 7.069 1.86 1.87 4.44 2.931 7.07 2.931s5.21-1.06 7.069-2.931c1.86-1.859 2.931-4.439 2.931-7.069s-1.07-5.21-2.931-7.07c-1.859-1.861-4.439-2.93-7.069-2.93z\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default NewsSvg;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    height: string\r\n    width: string\r\n    fill: string\r\n}\r\n\r\nconst HistorySvg: React.FC<PropsType> = ({height, width, fill}) => {\r\n    return (\r\n        <svg width={width} height={height} fill={fill} viewBox=\"0 0 512 512\" aria-labelledby='historysvg'>\r\n            <path d=\"m276 138v109.716l72.809 72.809c7.811 7.811 7.811 20.474 0 28.284-7.811 7.811-20.474 7.81-28.284 0l-78.667-78.667c-3.751-3.75-5.858-8.838-5.858-14.142v-118c0-11.046 8.954-20 20-20s20 8.954 20 20zm58.667-138h-157.334c-41.89 0-83.217 14.722-116.284 43.478v-23.478c0-11.046-8.954-20-20-20s-20 8.954-20 20v78.667c0 11.046 9.031 20 20 20h78.667c11.046 0 20-8.954 20-20s-8.954-20-20-20h-37.833c25.314-24.405 59.485-38.667 95.45-38.667h157.333c75.727 0 137.334 61.607 137.334 137.333v157.333c0 75.727-61.607 137.334-137.333 137.334h-157.334c-75.726 0-137.333-61.607-137.333-137.333v-78.667c0-11.046-8.954-20-20-20s-20 8.954-20 20v78.667c0 97.782 79.551 177.333 177.333 177.333h157.333c97.783 0 177.334-79.551 177.334-177.333v-157.334c0-97.782-79.551-177.333-177.333-177.333z\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default HistorySvg;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    height: string\r\n    width: string\r\n    fill: string\r\n}\r\n\r\nconst UsersSvg: React.FC<PropsType> = ({height, width, fill}) => {\r\n    return (\r\n        <svg width={width} height={height} fill={fill} viewBox=\"0 0 512 512\" aria-labelledby='usersSvg'>\r\n            <path d=\"M437.019,310.826c-28.355-28.355-62.197-49.227-99.125-61.652c34.055-25.17,56.183-65.596,56.183-111.097\r\n\t\t\tC394.078,61.941,332.137,0,256,0S117.922,61.941,117.922,138.077c0,45.502,22.128,85.928,56.183,111.097\r\n\t\t\tc-36.928,12.424-70.768,33.296-99.125,61.652C26.629,359.178,0,423.466,0,491.846C0,502.977,9.023,512,20.154,512h471.691\r\n\t\t\tc11.131,0,20.154-9.023,20.154-20.154C512,423.466,485.371,359.178,437.019,310.826z M158.232,138.077\r\n\t\t\tc0-53.91,43.858-97.768,97.769-97.768c53.911,0,97.769,43.858,97.769,97.768c0,53.91-43.858,97.768-97.769,97.768\r\n\t\t\tC202.09,235.846,158.232,191.987,158.232,138.077z M41.243,471.691C51.437,362.172,143.863,276.154,256,276.154\r\n\t\t\ts204.563,86.017,214.757,195.537H41.243z\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default UsersSvg;","import {AppStateType} from \"../redux-store\";\r\n\r\nexport const isAuthSelect = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const messagesErrorSelect = (state:AppStateType) => {\r\n    return state.auth.messages\r\n}\r\n\r\nexport const captchaSelect = (state:AppStateType) => {\r\n    return state.auth.captcha\r\n}","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styled from \"styled-components/macro\";\r\nimport ProfileSvg from \"../SVG-Components/ProfileSvg\";\r\nimport MessageSvg from \"../SVG-Components/MessageSvg\";\r\nimport NewsSvg from \"../SVG-Components/NewsSvg\";\r\nimport HistorySvg from \"../SVG-Components/HistorySvg\";\r\nimport UsersSvg from \"../SVG-Components/UsersSvg\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {isAuthSelect} from \"../../redux/Auth/auth-select\";\r\n\r\n\r\ntype  Props = {\r\n\r\n}\r\nconst Navbar:React.FC<Props> = (props) => {\r\n\r\n    const isAuth = useSelector(isAuthSelect)\r\n    console.log('renderNavbar')\r\n\r\n    return ( isAuth ?\r\n        <NavWrapper>\r\n            <ListWrapper>\r\n                <li>\r\n                    <NavLinkStyled to=\"/profile\">\r\n                        <HomePageSvg>\r\n                            <ProfileSvg height={'100%'} width={'100%'} fill={'#9ab1c6'}/>\r\n                        </HomePageSvg>\r\n                        <div><span>Профиль</span></div>\r\n                    </NavLinkStyled>\r\n\r\n                </li>\r\n                <li>\r\n                    <NavLinkStyled to=\"/dialogs\">\r\n                        <HomePageSvg>\r\n                            <MessageSvg height={'100%'} width={'100%'} fill={'#9ab1c6'}/>\r\n                        </HomePageSvg>\r\n                        <span>Сообщения</span>\r\n                    </NavLinkStyled>\r\n                </li>\r\n                <li>\r\n                    <NavLinkStyled to=\"/news\">\r\n                        <HomePageSvg>\r\n                            <NewsSvg height={'100%'} width={'100%'} fill={'#9ab1c6'}/>\r\n                        </HomePageSvg>\r\n                        <span>Новости</span>\r\n                    </NavLinkStyled>\r\n                </li>\r\n                <li>\r\n                    <NavLinkStyled to=\"/history\">\r\n                        <HomePageSvg>\r\n                            <HistorySvg height={'100%'} width={'100%'} fill={'#9ab1c6'}/>\r\n                        </HomePageSvg>\r\n                        <span>История</span>\r\n                    </NavLinkStyled>\r\n                </li>\r\n                <li>\r\n                    <NavLinkStyled to=\"/users\">\r\n                        <HomePageSvg>\r\n                            <UsersSvg height={'100%'} width={'100%'} fill={'#9ab1c6'}/>\r\n                        </HomePageSvg>\r\n                        <span>Пользователи</span>\r\n                    </NavLinkStyled>\r\n                </li>\r\n            </ListWrapper>\r\n        </NavWrapper>\r\n       : null)\r\n}\r\n\r\nexport default Navbar\r\n\r\n\r\nconst NavWrapper = styled.nav`\r\n    grid-area: n;\r\n    border-radius: 5px;\r\n    text-decoration: none;\r\n    height: 100%;\r\n    a {\r\n        text-decoration: none;\r\n        color: #2a5885;\r\n        font-weight: 400;\r\n    }\r\n`\r\n\r\nconst ListWrapper = styled.ul`\r\n  li {\r\n    margin-bottom: 15px;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    padding: 5px;\r\n  }\r\n  li:hover {\r\n    background-color: #d3d9de;\r\n  }\r\n  \r\n  li:last-child {\r\n    margin-bottom: 0;\r\n    margin-top: 80px;\r\n  }\r\n`\r\n\r\nconst HomePageSvg = styled.div`\r\n  width: 18px;\r\n  margin-right: 10px;\r\n`\r\n\r\nconst NavLinkStyled = styled (NavLink)`\r\nheight: 100%;\r\nwidth: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\n&.active{\r\ncolor: #1e7fea;\r\n}\r\n\r\n`\r\n  \r\n","import {createReducer} from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./auth-actions\"\r\n\r\n\r\nexport const SET_USER_DATA = 'auth-reducer/SET_USER_DATA'\r\nexport const SET_LOGIN_AUTH = 'auth-reducer/SET_LOGIN_AUTH'\r\nexport const LOGIN_OUT = 'auth-reducer/LOGIN_OUT'\r\nexport const DELETE_LOGIN = 'auth-reducer/DELETE_LOGIN'\r\nexport const SET_PROFILE_PHOTO = 'auth-reducer/SET_PROFILE_PHOTO'\r\nexport const SET_ERROR_MESSAGES = 'auth-reducer/SET_ERROR_MESSAGES'\r\nexport const SET_CAPTCHA = 'auth-reducer/SET_CAPTCHA'\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    login: null as string | null,\r\n    email: null as string | null,\r\n    messages: null as string | null,\r\n    isAuth: false,\r\n    photo: null as string | null,\r\n    captcha: null as string | null,\r\n}\r\n\r\nconst authReducer = createReducer(initialState, {\r\n    [SET_USER_DATA]: (state, action: ReturnType<typeof actions.setUserData>) => {\r\n        return {...state, ...action.data, isAuth: action.data.isAuth}\r\n    },\r\n    [SET_PROFILE_PHOTO]:(state, action: ReturnType<typeof actions.setProfilePhoto>) => {\r\n        return {...state, photo: action.photo }\r\n    },\r\n    [SET_ERROR_MESSAGES]:(state,action:ReturnType<typeof actions.setErrorMessages>) => {\r\n        return {...state, messages: action.error}\r\n    },\r\n    [SET_CAPTCHA]:(state,action:ReturnType<typeof actions.setCaptcha>) => {\r\n        return {...state, captcha: action.url}\r\n    },\r\n    [DELETE_LOGIN]:(state) => {\r\n        return {...state,id:null, login: null, email: null, isAuth: false,\r\n        messages: null, captcha: null\r\n        }\r\n    }\r\n})\r\n\r\nexport default authReducer","import {LOGIN_OUT, SET_CAPTCHA, SET_ERROR_MESSAGES, SET_LOGIN_AUTH, SET_PROFILE_PHOTO, SET_USER_DATA} from \"./auth-reducer\";\r\n\r\n\r\n\r\nexport const setUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    data: {id, login, email, isAuth}\r\n})\r\n\r\nexport const loginAuth = (email: string, password: number, rememberMe: boolean, captcha: string) => ({\r\n    type: SET_LOGIN_AUTH,\r\n    payload: {\r\n        email,password,rememberMe,captcha\r\n    }\r\n})\r\n\r\nexport const loginOut = () => ({\r\n    type: LOGIN_OUT,\r\n})\r\n\r\nexport const setProfilePhoto = (photo: string) => ({\r\n    type: SET_PROFILE_PHOTO,\r\n    photo: photo,\r\n})\r\n\r\nexport const setErrorMessages = (error: string) => ({\r\n    type: SET_ERROR_MESSAGES,\r\n    error: error\r\n})\r\nexport const setCaptcha = (url: string) => ({type: SET_CAPTCHA,url})","import React, {useState} from 'react';\r\nimport styled from \"styled-components/macro\";\r\nimport {ErrorMessage, Field, Form, Formik} from 'formik';\r\nimport * as yup from 'yup'\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {loginAuth} from \"../../redux/Auth/auth-actions\";\r\nimport {captchaSelect, isAuthSelect, messagesErrorSelect} from '../../redux/Auth/auth-select';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    errorMessage: string | null\r\n    captcha: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    loginAuth: (login: string, password: number, rememberMe: boolean, captcha: string) => void\r\n}\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst Login: React.FC<PropsType> = (props) => {\r\n\r\n    const [showPassword, setShowPassword] = useState(false)\r\n\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string().max(30),\r\n        password: yup.string().max(30),\r\n    })\r\n\r\n    const submit = (values: any) => {\r\n        const {email, password, checkbox,captcha} = values\r\n        props.loginAuth(email, password, checkbox,captcha)\r\n    }\r\n\r\n\r\n    return (\r\n        <FormWrapper>\r\n            {props.errorMessage && <ErrorWrapper>\r\n                <b>Не удается войти</b><br/>\r\n                Пожалуйста, проверьте правильность написания <b>логина</b> или <b>пароля</b>.\r\n                <List>\r\n                    <li><span>Возможно, нажата клавиша </span><b>Caps Lock</b>?</li>\r\n                    <li><span>Может быть, у Вас включена неправильная <b>раскладка</b> ? (русская или английская)</span></li>\r\n                    <li><span>Попробуйте набрать свой пароль в текстовом редакторе и <b>скопировать</b> в графу «Пароль»</span></li>\r\n                </List>\r\n                Если Вы всё внимательно проверили, но войти всё равно не удается <b>не отчаивайтесь :) </b>\r\n            </ErrorWrapper>}\r\n            <FormContainer>\r\n                <Formik validationSchema={validationSchema} initialValues={{email: '', password: ''}} onSubmit={submit}>\r\n                    {({handleChange,values}) => (\r\n                        <Form>\r\n                            <FormsItem>\r\n                                <Label><Input placeholder={'Email'} autoComplete='email' onChange={handleChange} value={values.email} type='email' name='email'/></Label>\r\n                                <Error name='email' component=\"div\"/>\r\n                            </FormsItem>\r\n                            <FormsItem>\r\n                                <Label><Input placeholder={'Пароль'}  autoComplete='current-password'  onChange={handleChange} value={values.password} type='password' name='password'/></Label>\r\n                                <Error name='password' component=\"div\"/>\r\n                            </FormsItem>\r\n                            <FormsItem>\r\n                                <Label><Input style={{width: '15px'}} onChange={handleChange}  type='checkbox' name='checkbox'/><p>Запомнить меня</p></Label>\r\n                            </FormsItem>\r\n                            <p style={{color: 'red'}}>{props.errorMessage}</p>\r\n                            <CaptchaWrapper>\r\n                                {props.captcha &&\r\n                                <div>\r\n                                    <img src={props.captcha} alt=\"#\"/>\r\n                                    <Label><Input placeholder={'Введите капчу'} onChange={handleChange} type='text' name='captcha'/></Label>\r\n                                </div>\r\n                                }\r\n                            </CaptchaWrapper>\r\n                            <ButtonWrapper>\r\n                                <Button type='submit'>Войти</Button>\r\n                            </ButtonWrapper>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </FormContainer>\r\n        </FormWrapper>\r\n    );\r\n};\r\n\r\n\r\ntype ContainerType = {\r\n    isAuth: boolean\r\n    loginAuth: (login: string, password: number, rememberMe: boolean, captcha: string) => void\r\n    errorMessage: string | null\r\n    captcha: string | null\r\n}\r\nconst LoginContainer: React.FC<ContainerType> = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <Login captcha={props.captcha} errorMessage={props.errorMessage} loginAuth={props.loginAuth}/>\r\n    )\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isAuth: isAuthSelect(state),\r\n        errorMessage: messagesErrorSelect(state),\r\n        captcha: captchaSelect(state),\r\n    }\r\n\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(MapStateToProps, {loginAuth})(LoginContainer)\r\n\r\n\r\nconst FormWrapper = styled.section`\r\n  background-color: white;\r\n  box-shadow: 0 1px 0 0 #d3d9de,0 0 0 1px #e7e8ec;\r\n  border-radius: 4px;\r\n  min-height: 600px;\r\n  display: flex;\r\n  flex-direction: column;  \r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst FormContainer = styled.div`\r\n  margin: 0 auto;\r\n  border: 1px solid #d3d9de;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n`\r\n\r\nconst FormsItem = styled.div`\r\n  margin-bottom: 10px;\r\n \r\n`\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  p {\r\n    margin-left: 10px;\r\n  }\r\n`\r\nconst Input = styled(Field)`\r\n  background-color: #ffffff;\r\n  border-radius: 3px;\r\n  border: 1px solid #d3d9de;\r\n  color: black;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  height: 35px;\r\n  width: 250px;\r\n`\r\n\r\nconst Error = styled(ErrorMessage)`\r\n  color: red;\r\n  margin-top: 5px;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 30px;\r\n`\r\n\r\nexport const Button = styled.button`\r\n    padding: 7px 16px 8px;\r\n    margin: 0;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    background-color: #5181b8;\r\n    border: 0;\r\n    border-radius: 4px;\r\n    color: #fff;\r\n    &:hover {\r\n    opacity: 0.88;\r\n    }\r\n    &:active {\r\n    background-color: #4a76a8;\r\n    padding-top: 8px;\r\n    padding-bottom: 7px;\r\n    }\r\n    &:disabled{\r\n    opacity: 0.5;\r\n    }\r\n`\r\n\r\nconst List = styled.ul`\r\n  padding-left: 30px;\r\n  margin: 20px 0;\r\n  li {\r\n    list-style: initial;\r\n  }\r\n`\r\n\r\nconst ErrorWrapper = styled.section`\r\n  font-size: 14px;\r\n  line-height: 150%;\r\n  background-color: #ffd6cc;\r\n  border-radius: 4px;\r\n  padding: 30px;\r\n  margin: 20px 0;\r\n`\r\n\r\nconst CaptchaWrapper = styled.div`\r\n  \r\n`","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        'API-KEY': \"bcafe704-1e20-408c-8edf-53182718e5ec\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage,pageSize,whatUsers){\r\n       return  instance.get( `users?page=${currentPage}&count=${pageSize}&friend=${whatUsers}`).then(response => ({response})).catch(error => ({error}))\r\n    },\r\n    getFriends(friend,pageNumber,count){\r\n        return instance.get(`users?friend=${friend}&page=${pageNumber}&count=${count}`).then(response => response.data).catch(error => console.log(error.message))\r\n    },\r\n    getUsersSubs(userId){\r\n      return instance.get(`follow/${userId}`).then(response => ({response})).catch(error => ({error}))\r\n    },\r\n    postUsersSubs(userId){\r\n      return  instance.post(`follow/${userId}`).then(response => ({response})).catch(error => ({error}))\r\n    },\r\n    deleteUsersSubs(userId){\r\n        return instance.delete(`follow/${userId}`).then(response => ({response})).catch(error => ({error}))\r\n    },\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`).catch(error => console.log(error.message))\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data).catch(error => console.log(error.message))\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`,{status}).catch(error => console.log(error.message))\r\n    },\r\n    savePhoto(photo){\r\n        let formData = new FormData()\r\n        formData.append('image', photo)\r\n        return instance.put('profile/photo',formData).catch(error => console.log(error.message))\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put(`profile`,profile).catch(error => console.log(error.message))\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    getAuth() {\r\n        return  instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    getCaptcha(){\r\n        return instance.get(`security/get-captcha-url`).then(response => ({response})).catch(error => ({error}))\r\n    },\r\n    login(email,password,rememberMe = false,captcha) {\r\n        return  instance.post(`auth/login`, {email,password,rememberMe,captcha}).then(response => ({response})).catch(error => ({error}))\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const galleryApi = {\r\n    getImages(){\r\n        return axios.get('https://api.giphy.com/v1/gifs/random?api_key=gR30u9O8KPOanwIQupHbD90d4k57EOeY').then(response => ({response})).catch(error => ({error}))\r\n    }\r\n}\r\n\r\n\r\n","import {call, fork, put, takeEvery, throttle} from \"redux-saga/effects\";\r\nimport {FOLLOW, GET_CURRENT_PAGE_USERS, GET_RANDOM_FRIENDS, GET_USERS, GET_USERS_SUBS, UNFOLLOW} from \"./users-reducer\";\r\nimport * as actions from \"./users-action\";\r\nimport {usersAPI} from \"../../api/api-js\";\r\nimport {UserType} from \"../../Types/Types\";\r\n\r\n\r\n\r\n\r\n\r\nexport function* getUsersWatcher() {\r\n    yield throttle(100,GET_USERS, getUsersWorker)\r\n\r\n}\r\n\r\nexport function* getUsersWorker({currentPage, pageSize,whatUsers}: ReturnType<typeof actions.getUsers>) {\r\n        yield put(actions.toggleIsFetching(true))\r\n        const {response,error}  = yield call(usersAPI.getUsers, currentPage, pageSize, whatUsers)\r\n        if (response){\r\n            yield put(actions.setUsers(response.data.items))\r\n            yield put(actions.setTotalCount(response.data.totalCount))\r\n            yield put(actions.isFriends(whatUsers))\r\n        } else {\r\n            console.log(error)\r\n        }\r\n        yield put(actions.toggleIsFetching(false))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function* getCurrentPageUsersWatcher() {\r\n    yield takeEvery(GET_CURRENT_PAGE_USERS, getCurrentPageUsersWorker)\r\n}\r\n\r\nexport function* getCurrentPageUsersWorker({pageNumber, pageSize,whatUsers}: ReturnType<typeof actions.getCurrentPageUsers>) {\r\n        yield put(actions.setCurrent(pageNumber));\r\n        yield put(actions.toggleIsFetching(true))\r\n        let {response,error} = yield call(usersAPI.getUsers, pageNumber, pageSize,whatUsers)\r\n        if (response){\r\n            yield put(actions.setUsers(response.data.items))\r\n        } else {\r\n            console.log(error)\r\n        }\r\n        yield put(actions.toggleIsFetching(false))\r\n\r\n\r\n}\r\n\r\nexport function* getAllUsersCount(){\r\n    let {response,error} = yield call(usersAPI.getUsers, 1, 1)\r\n    if (response){\r\n        yield put(actions.setAllUsersCount(response.data.totalCount))\r\n    } else {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* getAllFriendsCount(){\r\n    let {response,error} = yield call(usersAPI.getUsers, 1, 1,true)\r\n    if (response){\r\n        yield put(actions.setFriendsCount(response.data.totalCount))\r\n    } else {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* followWatcher() {\r\n    yield takeEvery(FOLLOW, followWorker)\r\n}\r\n\r\nexport function* followWorker({userId}: ReturnType<typeof actions.follow>) {\r\n\r\n    yield put(actions.toggleFollowingProgress(true, userId))\r\n    const {response,error} = yield call(usersAPI.postUsersSubs, userId)\r\n    if (response){\r\n        if (response.data.resultCode === 0) {\r\n            yield put(actions.follow(userId))\r\n            yield getAllFriendsCount()\r\n        }\r\n        yield getUsersSubsWorker({userId} as ReturnType<typeof actions.getUsersSubs>)\r\n    } else {\r\n        console.error(error)\r\n    }\r\n    yield put(actions.toggleFollowingProgress(false, userId))\r\n}\r\n\r\n\r\nexport function* unFollowWatcher() {\r\n    yield takeEvery(UNFOLLOW, unFollowWorker)\r\n}\r\n\r\nexport function* unFollowWorker({userId}: ReturnType<typeof actions.unFollow>) {\r\n    yield put(actions.toggleFollowingProgress(true, userId))\r\n    const {response,error} = yield call(usersAPI.deleteUsersSubs, userId)\r\n    if (response){\r\n        if (response.data.resultCode === 0) {\r\n            yield put(actions.unFollow(userId))\r\n            yield getAllFriendsCount()\r\n        }\r\n    } else {\r\n        console.log(error)\r\n    }\r\n    yield getUsersSubsWorker({userId} as ReturnType<typeof actions.getUsersSubs>)\r\n    yield put(actions.toggleFollowingProgress(false, userId))\r\n}\r\n\r\n\r\nexport function* getRandomFriendsWatcher() {\r\n    yield takeEvery(GET_RANDOM_FRIENDS, getRandomFriendsWorker)\r\n}\r\n\r\nexport function* getRandomFriendsWorker() {\r\n    yield put(actions.toggleIsFetching(true))\r\n    const {response,error} = yield call(usersAPI.getUsers,1,100,true)\r\n    const arr = [] as Array<UserType>\r\n    const randomNumber = [] as Array<number>\r\n    if (response){\r\n        yield put(actions.setFriendsCount(response.data.totalCount))\r\n        if (response.data.items.length !== 0) {\r\n            while (randomNumber.length !== response.data.totalCount && randomNumber.length < 6 ){\r\n                let totalCount;\r\n                if (response.data.totalCount > 100){\r\n                    totalCount = 100\r\n                } else {\r\n                    totalCount = response.data.totalCount\r\n                }\r\n                const randomIndex = Math.floor(Math.random() * totalCount)\r\n                if (!randomNumber.some(j => j === randomIndex)) {\r\n                    arr.push(response.data.items[randomIndex])\r\n                    randomNumber.push(randomIndex)\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        console.log(error)\r\n    }\r\n    yield put(actions.setRandomFriends(arr))\r\n    yield put(actions.toggleIsFetching(false))\r\n}\r\n\r\nexport function* getUsersSubs(){\r\n    yield takeEvery(GET_USERS_SUBS, getUsersSubsWorker)\r\n}\r\n\r\nexport function* getUsersSubsWorker({userId}: ReturnType<typeof actions.getUsersSubs>){\r\n    const {response,error} = yield call(usersAPI.getUsersSubs,userId)\r\n    if (response){\r\n        yield put(actions.setUsersSubs(response.data))\r\n    } else {\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield fork(getUsersWatcher)\r\n    yield fork(getCurrentPageUsersWatcher)\r\n    yield fork(followWatcher)\r\n    yield fork(unFollowWatcher)\r\n    yield fork(getRandomFriendsWatcher)\r\n    yield fork(getUsersSubs)\r\n}","import {call, fork, put, takeEvery} from 'redux-saga/effects'\r\nimport {DELETE_LOGIN, LOGIN_OUT, SET_LOGIN_AUTH} from './auth-reducer'\r\nimport {authApi, usersAPI} from \"../../api/api-js\";\r\nimport * as actions from \"./auth-actions\";\r\nimport {getAllFriendsCount, getAllUsersCount} from '../Users/user-saga';\r\n\r\n\r\nexport function* authWatcher() {\r\n    yield takeEvery(SET_LOGIN_AUTH, setLoginWorker)\r\n    yield takeEvery(LOGIN_OUT, logoutWorker)\r\n}\r\n\r\n\r\nexport function* getAuthWorker() {\r\n    const data = yield call(authApi.getAuth)\r\n    if (data.resultCode === 0) {\r\n        yield put(actions.setUserData(data.data.id, data.data.login, data.data.email, true))\r\n        yield getProfilePhoto(data.data.id)\r\n        yield getAllUsersCount()\r\n        yield getAllFriendsCount()\r\n    }\r\n\r\n}\r\n\r\nexport function* getProfilePhoto(userId: number) {\r\n    const data = yield call(usersAPI.getProfile, userId)\r\n    yield put(actions.setProfilePhoto(data.data.photos.small))\r\n    console.log(data.data.photos.small)\r\n}\r\n\r\n\r\ntype LoginWorker = {\r\n    payload: {\r\n        email: string\r\n        password: string\r\n        rememberMe: boolean\r\n        captcha: string\r\n    }\r\n    type: string\r\n}\r\n\r\nexport function* setLoginWorker({payload: {email, password, rememberMe,captcha}}: LoginWorker) {\r\n    const {response,error} = yield call(authApi.login, email, password, rememberMe,captcha)\r\n    if (response) {\r\n        if (response.data.resultCode === 0) {\r\n            yield getAuthWorker()\r\n        } else if (response.data.resultCode === 10){\r\n            yield captchaWorker()\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        yield put(actions.setErrorMessages(message))\r\n    } else if (error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport function* captchaWorker () {\r\n    const {response,error} = yield call(authApi.getCaptcha)\r\n    if (response) {\r\n        yield put(actions.setCaptcha(response.data.url))\r\n    } else if (error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* logoutWorker() {\r\n    let data = yield call(authApi.logout)\r\n    if (data.resultCode === 0) {\r\n        yield put({type: DELETE_LOGIN})\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield fork(authWatcher);\r\n}\r\n","import {call, fork, put, takeEvery} from \"redux-saga/effects\";\r\nimport {getAuthWorker} from \"./Auth/auth-saga\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\nconst INITIALIZED = 'INITIALIZED'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof initialize>\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\nexport const initialize = () => ({type: INITIALIZED})\r\n\r\n\r\nexport function* initializeWatcher() {\r\n    yield takeEvery(INITIALIZED, initializeWorker)\r\n}\r\n\r\nexport function* initializeWorker() {\r\n    yield fork(getAuthWorker)\r\n    yield put(initializedSuccess())\r\n}\r\n\r\nexport default appReducer\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\ntype PropsType = {\r\n    height: string\r\n    width: string\r\n    fill: string\r\n}\r\n\r\nconst ArrowSvg: React.FC<PropsType> = ({height, width, fill}) => {\r\n    return (\r\n        <svg width={width} height={height} fill={fill} viewBox=\"0 0 451.847 451.847\" aria-labelledby='title'>\r\n            <path d=\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751\r\n\t\tc12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0\r\n\t\tc12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default ArrowSvg;\r\n","import React, {useRef, useState} from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ArrowSvg from \"../../assets/images/arrowSvg\";\r\nimport styled, {keyframes} from \"styled-components/macro\"\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    loginOut: () => void\r\n    photoSmall: string | undefined | null\r\n}\r\nconst transitionName = `example`;\r\n\r\nconst Header: React.FC<PropsType> = ({isAuth, login, loginOut, photoSmall}) => {\r\n\r\n\r\n    const [isOpenModal, setOpenModal] = useState(false)\r\n    const ref = useRef<HTMLUListElement>(null);\r\n    const loginBlockRef = useRef<HTMLDivElement>(null)\r\n\r\n\r\n    const handleClickOutside = (event: MouseEvent): void => {\r\n        if (ref.current && !ref.current.contains(event.target as Node) && !loginBlockRef.current!.contains(event.target as Node)) {\r\n            setOpenModal(false);\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const hadleClickDropDown = () => {\r\n        if (isAuth) {\r\n            setOpenModal(!isOpenModal)\r\n            document.addEventListener('click', handleClickOutside, true);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrapper>\r\n                <Container>\r\n                    <Logo src=\"https://vk.com/images/svg_icons/ic_head_logo.svg\" alt=\"#\"/>\r\n                    <LoginWrapper onClick={hadleClickDropDown}>\r\n                        {\r\n                            isAuth ?\r\n                                <LoginTrue ref={loginBlockRef}>\r\n                                    <LoginName>{login}</LoginName>\r\n                                    {photoSmall && <LoginPhotoSmall src={photoSmall} alt=\"#\"/>}\r\n                                    <ArrowSvgWrapper><ArrowSvg height='11' width='11' fill='white'/></ArrowSvgWrapper>\r\n                                </LoginTrue> :\r\n                                <LoginFalse><NavLink to={'/login'}>Login</NavLink></LoginFalse>\r\n                        }\r\n\r\n\r\n                        <CSSTransition in={isOpenModal} classNames={transitionName} timeout={300} mountOnEnter unmountOnExit>\r\n                            <DropDownWrapper ref={ref}>\r\n                                <DropDownItem onClick={() => loginOut()}><a href=\"#\">Выйти</a></DropDownItem>\r\n                            </DropDownWrapper>\r\n                        </CSSTransition>\r\n\r\n\r\n                    </LoginWrapper>\r\n                </Container>\r\n            </HeaderWrapper>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n\r\n\r\nconst HeaderWrapper = styled.header`\r\n  background-color: #4974a5;\r\n  height: 100%;\r\n  padding: 0px 5px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n \r\n`\r\n\r\nconst Logo = styled.img`\r\n   width: 50px;\r\n`\r\n\r\nconst LoginWrapper = styled.div`\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 25px;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n \r\n`\r\n\r\nconst LoginTrue = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  padding: 5px 5px;\r\n  min-height: 50px;\r\n  \r\n  :hover {\r\n  background-color: rgba(0,20,51,.12);\r\n\r\n  }\r\n`\r\n\r\nconst LoginName = styled.span`\r\n  cursor: pointer;\r\n`\r\n\r\nconst LoginPhotoSmall = styled.img`\r\n  width: 40px;\r\n  border-radius: 50%;\r\n  margin-left: 10px;\r\n`\r\n\r\nconst LoginFalse = styled.div`\r\n  padding: 12.5px 0;\r\n  min-height: 50px;\r\n  a {\r\n  color: white;\r\n  }\r\n`\r\n\r\n\r\nconst translateYtrue = keyframes`\r\n  from {\r\n    transform: translateY(0);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateY(5px);\r\n    opacity: 1;\r\n  }\r\n`\r\nconst translateYfalse = keyframes`\r\n    to {\r\n    transform: translateY(-10px);\r\n      }\r\n  from {\r\n    transform: translateY(100px);\r\n  }\r\n`\r\nconst rotate = keyframes`\r\n  0% {\r\n      transform: rotate(0);\r\n      \r\n  }\r\n  100% {\r\n    transform: rotate(360deg) \r\n  \r\n  }\r\n`\r\n\r\n\r\nconst DropDownWrapper = styled.ul`\r\n  position: absolute;\r\n  background-color: #fff;\r\n  border: 1px solid #c5d0db;\r\n  padding: 4px 0;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.8);\r\n  min-width: 206px;\r\n  max-width: 230px;\r\n  width: auto;\r\n  right: 10px;\r\n  top: 60px;\r\n   &.${transitionName}-exit-active{animation: ${rotate} 0.3s linear reverse};\r\n   &.${transitionName}-enter-active{animation: ${translateYtrue} 0.2s forwards}  ;\r\n   \r\n             \r\n  :before {\r\n      position: absolute;\r\n      pointer-events: none;\r\n      content: '';\r\n      height: 0;\r\n      width: 0;\r\n      bottom: 100%;\r\n      margin: 0 -6px;\r\n      right: 42px;\r\n      border: 6px solid transparent;\r\n      border-bottom: 6px solid #fff;\r\n  }\r\n`\r\n\r\nconst DropDownItem = styled.li`\r\n padding: 0 15px;\r\n :hover {\r\n      background-color: #e5ebf1;\r\n }\r\n a {\r\n      color: #2a5885;\r\n      font-size: 14px;\r\n      font-weight: 500;\r\n      line-height: 30px;\r\n }\r\n`\r\n\r\nconst ArrowSvgWrapper = styled.div`\r\n  margin-left: 10px;\r\n`\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {loginOut} from \"../../redux/Auth/auth-actions\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    auth: {\r\n        id: number | null,\r\n        login: string | null,\r\n        isAuth: boolean\r\n    }\r\n    profilePhotos: string | null\r\n\r\n\r\n\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    loginOut: () => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst HeaderContainerAPI: React.FC<PropsType> = (props) => {\r\n\r\n\r\n    return (\r\n        <Header loginOut={props.loginOut} photoSmall={props.profilePhotos} login={props.auth.login} isAuth={props.auth.isAuth}/>\r\n    );\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({auth: state.auth, profilePhotos: state.auth.photo})\r\n\r\n\r\nconst HeaderContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {loginOut})(HeaderContainerAPI)\r\n\r\nexport default HeaderContainer;","import React, {Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Login from \"./components/Login/Login2\";\nimport {connect} from \"react-redux\";\nimport {Route} from \"react-router-dom\";\nimport {initialize} from \"./redux/app-reducer\"\nimport Preloader from \"./components/Preloader/Preloader\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\"\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst GalleryContainer = React.lazy(() => import(\"./components/Gallery/galleryContainer\"));\nconst GalleryHistory = React.lazy(() => import(\"./components/Gallery/GalleryHistory/GalleryHistory\"));\nconst ProfileEditContainer = React.lazy(() => import(\"./components/Profile/ProfileEdit/ProfileEditContainer\"));\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initialize()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <>\n\n                <HeaderContainer/>\n                <div className=\"app-wrapper\">\n                    <Navbar navbarState={this.props.state}/>\n                    <div className=\"app-wrapper-content\">\n                        <Suspense fallback={<div>Загрузка...</div>}>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/edit' render={() => <ProfileEditContainer/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='/news' render={() => <GalleryContainer/>}/>\n                        <Route path='/history' render={() => <GalleryHistory/>}/>\n                        </Suspense>\n                    </div>\n                </div>\n\n            </>\n\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({initialized: state.appPage.initialized})\n\n\nexport default connect(mapStateToProps, {initialize})(App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {call, delay, fork, put, takeEvery} from \"redux-saga/effects\";\r\nimport {GET_PROFILE, GET_USER_STATUS, SAVE_PHOTO, SAVE_PROFILE, UPDATE_USER_STATUS} from \"./profile-reducer\";\r\nimport {usersAPI} from \"../../api/api-js\";\r\nimport * as actions from \"./profile-actions\";\r\nimport {saveProfileSuccess} from \"./profile-actions\";\r\nimport {getAuthWorker} from \"../Auth/auth-saga\";\r\n\r\n\r\nexport function* getProfileWatcher() {\r\n    yield takeEvery(GET_PROFILE, getProfileWorker)\r\n}\r\n\r\nexport function* getProfileWorker({userId}: ReturnType<typeof actions.getProfile>) {\r\n    if (userId) {\r\n        const data = yield call(usersAPI.getProfile, userId)\r\n        yield put(actions.setUserProfile(data.data))\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport function* getUserStatusWatcher() {\r\n    yield takeEvery(GET_USER_STATUS, getUserStatusWorker)\r\n}\r\n\r\nexport function* getUserStatusWorker({userId}: ReturnType<typeof actions.getUserStatus>) {\r\n    const data = yield call(usersAPI.getStatus, userId)\r\n    yield put(actions.setUserStatus(data))\r\n}\r\n\r\n\r\nexport function* updateUserStatusWatcher() {\r\n    yield takeEvery(UPDATE_USER_STATUS, updateUserStatusWorker)\r\n}\r\n\r\nexport function* updateUserStatusWorker({status}: ReturnType<typeof actions.updateUserStatus>) {\r\n    const response = yield call(usersAPI.updateStatus, status)\r\n    if (response.data.resultCode === 0) {\r\n        yield put(actions.setUserStatus(status))\r\n    }\r\n}\r\n\r\n\r\nexport function* savePhotoWatcher() {\r\n    yield takeEvery(SAVE_PHOTO, savePhotoWorker)\r\n}\r\n\r\nexport function* savePhotoWorker({photo}: ReturnType<typeof actions.savePhoto>) {\r\n    let response = yield call(usersAPI.savePhoto, photo)\r\n    if (response.data.resultCode === 0) {\r\n        yield put(actions.savePhotoSuccess(response.data.data.photos))\r\n        yield getAuthWorker()\r\n    }\r\n}\r\n\r\n\r\nexport function* saveProfileWatcher() {\r\n    yield takeEvery(SAVE_PROFILE, saveProfileWorker)\r\n}\r\n\r\nexport function* saveProfileWorker({values}: ReturnType<typeof actions.saveProfile>) {\r\n    let response = yield call(usersAPI.saveProfile, values)\r\n    if (response.data.resultCode === 0) {\r\n        yield put(saveProfileSuccess())\r\n        yield delay(4000)\r\n        yield put(saveProfileSuccess())\r\n    }\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield fork(getProfileWatcher);\r\n    yield fork(getUserStatusWatcher)\r\n    yield fork(updateUserStatusWatcher)\r\n    yield fork(savePhotoWatcher)\r\n    yield fork(saveProfileWatcher)\r\n}","import {fork,call,throttle, put} from \"redux-saga/effects\";\r\nimport { galleryApi } from \"../../api/api-js\";\r\nimport {createDate} from \"../../components/common/Data/createDate\";\r\nimport {GET_IMG} from \"./gallery-reducer\";\r\nimport * as actions from \"./gallery-action\"\r\n\r\n\r\nexport function* getImgWatcher() {\r\n    yield throttle(500, GET_IMG, getImgWorker)\r\n}\r\n\r\nexport function* getImgWorker() {\r\n    yield put(actions.setGalleryStatus('loading'))\r\n    const {response,error} = yield call(galleryApi.getImages)\r\n    if (response) {\r\n        let time = createDate()\r\n       yield put(actions.setImages(response.data.data, time))\r\n    } else if (error){\r\n        actions.setGalleryStatusError(error)\r\n    }\r\n    yield put(actions.setGalleryStatus('complete'))\r\n}\r\n\r\n\r\n\r\nexport default function* rootSaga () {\r\n    yield fork(getImgWatcher)\r\n}","import {spawn } from \"redux-saga/effects\";\r\nimport { initializeWatcher } from \"../app-reducer\";\r\nimport auth from '../Auth/auth-saga'\r\nimport profile from '../Profile/profile-saga'\r\nimport users from '../Users/user-saga'\r\nimport gallery from '../Gallery/gallery-saga'\r\n\r\n\r\nexport default function* rootSaga() {\r\n   yield spawn(auth)\r\n   yield spawn(initializeWatcher)\r\n   yield spawn(profile)\r\n   yield spawn(users)\r\n   yield spawn(gallery)\r\n\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./Profile/profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./Users/users-reducer\";\r\nimport authReducer from \"./Auth/auth-reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport CreateSagaMiddleware from 'redux-saga'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport galleryReducer from \"./Gallery/gallery-reducer\";\r\nimport rootSaga from \"./Sagas/root-saga\";\r\n\r\n\r\n\r\nlet reducers = combineReducers ({\r\n                                    profilePage: profileReducer,\r\n                                    dialogsPage: dialogsReducer,\r\n                                    usersPage: usersReducer,\r\n                                    auth: authReducer,\r\n                                    form: formReducer,\r\n                                    appPage: appReducer,\r\n                                    galleryPage: galleryReducer\r\n\r\n                                })\r\n\r\n\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nconst sagaMiddleware = CreateSagaMiddleware()\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore (reducers, composeEnhancers (applyMiddleware (sagaMiddleware,thunk)))\r\nsagaMiddleware.run(rootSaga)\r\n\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App state={store.getState()}/>\n        </Provider>,\n    </BrowserRouter>,\n    document.getElementById ('root')\n);\n\nserviceWorker.unregister ();\n","import {PhotosType, ProfileType} from \"../../Types/Types\";\r\nimport {\r\n    ADD_POST, DELETE_POST,\r\n    GET_PROFILE,\r\n    GET_USER_STATUS,\r\n    SAVE_PHOTO,\r\n    SAVE_PROFILE,\r\n    SAVE_PROFILE_SUCCESS,\r\n    SET_PHOTO_SUCCESS,\r\n    SET_USER_PROFILE,\r\n    SET_USER_STATUS,\r\n    UPDATE_USER_STATUS\r\n} from \"./profile-reducer\";\r\n\r\n\r\nexport const addPost = (newPost: string,date: string) => ({type: ADD_POST, newPost,date}as const)\r\nexport const deletePost = (id: number) => ({type: DELETE_POST,id}as const)\r\nexport const setUserProfile = (profile: ProfileType) => ({type: SET_USER_PROFILE, profile}as const)\r\nexport const setUserStatus = (status: string) => ({type: SET_USER_STATUS, status}as const)\r\nexport const savePhotoSuccess = (photo: PhotosType) => ({type: SET_PHOTO_SUCCESS, photo}as const)\r\nexport const getProfile = (userId: number) => ({type:GET_PROFILE,userId}as const)\r\nexport const getUserStatus = (userId: number) => ({type: GET_USER_STATUS,userId}as const)\r\nexport const updateUserStatus = (status: string) => ({type: UPDATE_USER_STATUS,status}as const)\r\nexport const savePhoto = (photo: object) => ({type: SAVE_PHOTO,photo}as const)\r\nexport const saveProfile = (values: object) => ({type: SAVE_PROFILE,values}as const)\r\nexport const saveProfileSuccess = () =>({type: SAVE_PROFILE_SUCCESS}as const)","import {DELETE_HISTORY_ITEM, FIRST_RENDER, GET_IMG, SET_CURRENT_PAGE, SET_IMAGES, SET_STATUS, SET_STATUS_ERROR} from \"./gallery-reducer\"\r\n\r\n\r\nexport const getImg = () => ({type: GET_IMG}as const)\r\nexport const isFirstRender = (flag: boolean) => ({type: FIRST_RENDER,flag}as const)\r\nexport const setGalleryStatus = (status: string) => ({type: SET_STATUS,status}as const)\r\nexport const setGalleryStatusError = (status: string) => ({type: SET_STATUS_ERROR,status}as const)\r\nexport const setImages = (data: any, time: string) => ({type: SET_IMAGES, data, time}as const)\r\nexport const deleteHistoryItem = (id: number) => ({type: DELETE_HISTORY_ITEM, id}as const)\r\nexport const setCurrentPages = (value: number) => ({type: SET_CURRENT_PAGE, value}as const)","import React, {Component} from 'react';\r\nimport Preloaders from '../../assets/images/Preloader.svg'\r\n\r\nclass Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <img style={{width: '100%'}} src={Preloaders} alt={'#'}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Preloader;"],"sourceRoot":""}